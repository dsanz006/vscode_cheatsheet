[
    /*

    More info here: https://code.visualstudio.com/docs/getstarted/keybindings

    Pending issues: #59084

    Some more can be found on VS Code source code. Under src/vs/ search for "new RawContextKey<"

    Todo:
        · Text edition
        · IntelliSense (Code completion & navigation)
        · Refactoring/code actions ??

    Some commands are custom macros, which allow concatenating multiple commands. This is done with
    an extension: https://marketplace.visualstudio.com/items?itemName=geddski.macros

    ----------------------------------------------------------

    Keys:

    <a>     : Arrows

    General commands:
     · Ctrl+G           : Leave, cancel, exit... (depends on context)
     · Enter            : Open file (on quick open, problems panel, file explorer...), expand/collapse folder
     · Ctrl+Enter       : Open file to side editor
     · Left/Right       : Expand/Collapse
     · BkSpc/Supr       : Delete/Remove

    General MAJOR-KEY meanings - Used with Meta (Super) key:
     · F        : Menu & Sidebar
     · W        : Explorer
     · D        : Debug
     · G        : Panel
     · S        : Search
     · R        : Problems panel
     · T        : Terminal
     · E        : Editor
     · B        : BreadCrumbs
     · A        : IntelliSense (Code completion & navigation)
     · C        : Compare editor

    General MINOR-KEY meanings:
     · A        : Focus/View (Toggle)
     · X        : Split
     · W        : Next/other
     · Q        : Previous
     · E        : Expand/Contract
     · F        : File (open, show...)
     · N        : New/Create
     · T        : Toggle
     · D        : Close
     · <a>      : Move

    ----------------------------------------------------------

    Menu, open, commands.. (ctrl+O):
     · Ctrl+O O             : Quick open...
     · Ctrl+O C             : Command palette...
     · Ctrl+O R             : Open recent...
     · Ctrl+Shft+O R        : Focus on recent file on history...
     · Ctrl+O W             : Open workspace...
     · Ctrl+O D             : Open directory...
     · Ctrl+O F             : Open file...
     · Ctrl+O N             : Open active file in new window
     · Ctrl+Shft+O N        : Duplicate workspace in new window
     · Ctrl+O BkSp/Supr     : Close window

    File explorer:
     · Ctrl+J               : Focus on file explorer
     · Ctrl+N               : New file
     · Ctrl+Shft+N          : New folder
     · Ctrl+M               : Collapse all folders in file explorer
     · Alt+J F              : Reveal current file in file explorer (if in workspace)

    Debug:
     · Ctrl+D B             : Toggle breakpoint
     · Ctrl+D C             : Add conditional breakpoint
     · Ctrl+D F             : Add function breakpoint
     · Ctrl+D L             : Add logpoint
     · Ctrl+D E             : Enable/disable breakpoint
     · Ctrl+D <a>           : Go to next/prev. breakpoint
     · Alt+D D              : Focus on debug bar
     · Alt+D B              : Focus on breakpoints view
       · Supr/BkSp          : (breakpointsFocused) Remove breakpoint
       · Ctrl+D E           : (breakpointsFocused) Enable/Disable breakpoint
       · Enter (Ctrl+Enter) : (breakpointsFocused) Open breakpoint (to side)
       · Ctrl+D A           : (breakpointsFocused) enable all breakpoints
       · Ctrl+Shft+D A      : (breakpointsFocused) disable all breakpoints
       · Ctrl+Supr/BkSp     : (breakpointsFocused) remove all breakpoints
     · Alt+D V              : Focus on variables view
     · Alt+D W              : Focus on watch view
     · Alt+D C              : Focus on call stack view
     · F7                   : Run default build task
     · Shft+F7              : Run non-default task (choose) 
     · Shift+Alt+F5         : Choose debug configuration and start debuging
     · F5, F6, F10, F11     : Debugging keys

    Panel & Sidebar:
     · Ctrl+H C             : Toggle Panel
     · Ctrl+H S             : Toggle sidebar

    Search & Replace:
     · Ctrl+F               : Focus on find widget
     · Ctrl+- F             : Select and find / Show next match
     · Ctrl+Shft+- F        : Show previous match (from widget or selected)
     · Ctrl+Alt+- F         : Select all matches (from widget or selected)
     · Ctrl+R               : Focus on replace widget
     · Ctrl+- R             : Replace current match (widget replace)
     · Ctrl+Alt+- R         : Replace all matches (widget replace)
     · Ctrl+Shft+F          : Search on search panel
     · Ctrl+<down>          : Focus on search/replace results
     · Ctrl+<up>            : Focus on search input box
     · Ctrl+. F             : Show next search panel match / Search selected
     · Ctrl+Shft+. F        : Show previous search panel match
     · Ctrl+Shft+R          : Replace on search panel
     · Ctrl+. R             : Replace current match (search panel replace)
     · Ctrl+Shft+. R        : Replace all file matches (search panel replace)
     · Ctrl+Alt+. R         : Replace all matches (search panel replace)
     · Ctrl+M               : Toggle search panel expand/collapse
     · Alt+F E              : Collapse search results
     · Alt+F C              : Toggle search case sensitive
     · Alt+F R              : Toggle search regex
     · Alt+F W              : Toggle search whole word

    Problems panel:
     · Ctrl+P               : Focus on problems panel
     · Ctrl+Shft+P          : Go to next problem

    Terminal:
     · Ctrl+T               : Focus on terminal
     · Ctrl+N               : Add new terminal (another window) and focus
     · Ctrl+Q X             : Split terminal (add a pane and focus)
     · Ctrl+A <u,d>         : Switch focus to next/prev. terminal window
     · Ctrl+A <l,r>         : Switch focus to next/prev. terminal pane
     · Ctrl+Shift+C         : (terminalFocus) Copy
     · Ctrl+Shift+V         : (terminalFocus) Paste
     · Ctrl+M               : Toggle terminal expand/collapse
     · Alt+T F              : Open new terminal in location of current file

    Editor:
     · Ctrl+E               : Focus on active editor (from anywhere)
     · Ctrl+W               : Close active file editor
     · Ctrl+Shft+W          : Close all other files in group
     · Ctrl+Alt+W           : Close active editor group
     · Ctrl+Shft+Alt+W      : Close all other editor groups
     · Ctrl+A <l,r>         : Focus on next/prev. file of group
     · Ctrl+A <u,d>         : Focus on next/prev. editor group
     · Ctrl+{1-9}           : Focus on file index 1-9 of group
     · Alt+{1-9}            : Open editor in position 1-9
     · Ctrl+Q X             : Split editor vertically
     · Ctrl+Q T             : Toggle layout (horiz./vert.)
     · Ctrl+Q <l,r>         : Move editor left/right in group
     · Ctrl+Q <u,d>         : Move editor to next/prev. group
     · Ctrl+Shft+Q <a>      : Move editor group to above/below/left/right
     · Ctrl+M               : Expand editor group
     · Ctrl+Shft+M          : Reset editor group sizes

    Breadcrumbs:
     · Ctrl+B               : Focus on breadcrumbs
     · <a>                  : Navigate breadcrumbs

    Compare Editor (Alt+C):
     · Alt+C <l,d>          : Go to next change
     · Alt+C <r,u>          : Go to previous change

    Text Edition (XXX todo):
     · Alt+A                : Select all

    ----------------------------------------------------------

    Editor :: Multiple Cursors:
     · Ctrl+Shift+Up/Down           : Add cursor on next/previous line
     · Alt+Click                    : Add cursor on mouse click

    Editor :: Text Selection:
     · Ctrl+I                       : Select current line
     · Shift+Left/Right             : Select next/previous char
     · Ctrl+Shift+Left/Right        : Select next/previous word
     · Ctrl+Shift+Alt+Left/Right    : Select next/previous sub-word
     · Shift+Up/Down                : Select/deselect next/previous line
     · Ctrl+Shift+Up/Down           : Add next/previous line to selection
     · Ctrl+D                       : Select current word, or select next word occurrence
     · Ctrl+U                       : Soft undo: deselect last selection added with Ctrl+D
     · Ctrl+Shift+L                 : Select all occurrences of currently selected text
     · Alt+Up/Down                  : Move selected text up/down

    Editor :: Navigation:
     · Ctrl+L                       : Go to Line

    ---------------------------------------------------------- 
    
    */



/* ---------------------------------------------------- */

/**** Panel & Sidebar ****/

    {
        "key": "ctrl+h c",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+h ctrl+c",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+h s",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+h ctrl+s",
        "command": "workbench.action.toggleSidebarVisibility"
    },

/* ---------------------------------------------------- */
        
/**** Menu, open, commands... (ctrl+O) ****/

    {
        "key": "ctrl+o o",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+o ctrl+o",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+o c",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+o ctrl+c",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+o r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+o ctrl+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+shift+o r",
        "command": "workbench.action.openPreviousEditorFromHistory",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+o ctrl+shift+r",
        "command": "workbench.action.openPreviousEditorFromHistory",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+o w",
        "command": "workbench.action.openWorkspace"
    },
    {
        "key": "ctrl+o ctrl+w",
        "command": "workbench.action.openWorkspace"
    },
    {
        "key": "ctrl+o d",
        "command": "workbench.action.files.openFolder"
    },
    {
        "key": "ctrl+o ctrl+d",
        "command": "workbench.action.files.openFolder"
    },
    {
        "key": "ctrl+o f",
        "command": "workbench.action.files.openFile"
    },
    {
        "key": "ctrl+o ctrl+f",
        "command": "workbench.action.files.openFile"
    },
    {
        "key": "ctrl+o n",
        "command": "workbench.action.files.showOpenedFileInNewWindow"
    },
    {
        "key": "ctrl+o ctrl+n",
        "command": "workbench.action.files.showOpenedFileInNewWindow"
    },
    {
        "key": "ctrl+shift+o n",
        "command": "workbench.action.duplicateWorkspaceInNewWindow"
    },
    {
        "key": "ctrl+shift+o ctrl+shift+n",
        "command": "workbench.action.duplicateWorkspaceInNewWindow"
    },
    {
        "key":"ctrl+o backspace",
        "command": "workbench.action.closeWindow"
    },
    {
        "key":"ctrl+o ctrl+backspace",
        "command": "workbench.action.closeWindow"
    },
    {
        "key":"ctrl+o delete",
        "command": "workbench.action.closeWindow"
    },
    {
        "key":"ctrl+o ctrl+delete",
        "command": "workbench.action.closeWindow"
    },

/* ---------------------------------------------------- */
    
/**** File Explorer ****/

    {
        "key": "ctrl+j",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "!filesExplorerFocus"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.files.action.collapseExplorerFolders",
        "when": "filesExplorerFocus"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus"
    },
    {
        "key": "alt+j f",
        "command": "revealInExplorer"
    },
    {
        "key": "alt+j alt+f",
        "command": "revealInExplorer"
    },

/* ---------------------------------------------------- */

/**** Debug ****/

    {
        "key": "ctrl+d b",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d ctrl+b",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d c",
        "command": "editor.debug.action.conditionalBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d ctrl+c",
        "command": "editor.debug.action.conditionalBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d f",
        "command": "workbench.debug.viewlet.action.addFunctionBreakpointAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d ctrl+f",
        "command": "workbench.debug.viewlet.action.addFunctionBreakpointAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d l",
        "command": "editor.debug.action.toggleLogPoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d alt+l",
        "command": "editor.debug.action.toggleLogPoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d e",
        "command": "debug.enableOrDisableBreakpoint",
        "when": "!breakpointsFocused"
    },
    {
        "key": "ctrl+d alt+e",
        "command": "debug.enableOrDisableBreakpoint",
        "when": "!breakpointsFocused"
    },
    {
        "key": "ctrl+d down",
        "command": "editor.debug.action.goToNextBreakpoint",
    },
    {
        "key": "ctrl+d ctrl+down",
        "command": "editor.debug.action.goToNextBreakpoint"
    },
    {
        "key": "ctrl+d right",
        "command": "editor.debug.action.goToNextBreakpoint",
    },
    {
        "key": "ctrl+d ctrl+right",
        "command": "editor.debug.action.goToNextBreakpoint"
    },
    {
        "key": "ctrl+d up",
        "command": "editor.debug.action.goToPreviousBreakpoint"
    },
    {
        "key": "ctrl+d ctrl+up",
        "command": "editor.debug.action.goToPreviousBreakpoint"
    },
    {
        "key": "ctrl+d left",
        "command": "editor.debug.action.goToPreviousBreakpoint"
    },
    {
        "key": "ctrl+d ctrl+left",
        "command": "editor.debug.action.goToPreviousBreakpoint"
    },
    {
        "key": "alt+d d",
        "command": "workbench.view.debug"
    },
    {
        "key": "alt+d alt+d",
        "command": "workbench.view.debug"
    },
    {
        "key": "alt+d b",
        "command": "workbench.debug.action.focusBreakpointsView"
    },
    {
        "key": "alt+d alt+b",
        "command": "workbench.debug.action.focusBreakpointsView"
    },
    {
        "key": "delete",
        "command": "debug.removeBreakpoint",
        "when": "breakpointsFocused"
    },
    {
        "key": "backspace",
        "command": "debug.removeBreakpoint",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+d e",
        "command": "debug.toggleBreakpoint",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+d ctrl+e",
        "command": "debug.toggleBreakpoint",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+d a",
        "command": "workbench.debug.viewlet.action.enableAllBreakpoints",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+d ctrl+a",
        "command": "workbench.debug.viewlet.action.enableAllBreakpoints",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+shift+d a",
        "command": "workbench.debug.viewlet.action.disableAllBreakpoints",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+shift+d ctrl+shift+a",
        "command": "workbench.debug.viewlet.action.disableAllBreakpoints",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+backspace",
        "command": "workbench.debug.viewlet.action.removeAllBreakpoints",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+delete",
        "command": "workbench.debug.viewlet.action.removeAllBreakpoints",
        "when": "breakpointsFocused"
    },
    {
        "key": "alt+d v",
        "command": "workbench.debug.action.focusVariablesView"
    },
    {
        "key": "alt+d alt+v",
        "command": "workbench.debug.action.focusVariablesView"
    },
    {
        "key": "alt+d w",
        "command": "workbench.debug.action.focusWatchView"
    },
    {
        "key": "alt+d alt+w",
        "command": "workbench.debug.action.focusWatchView"
    },
    {
        "key": "backspace",
        "command": "debug.removeWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "delete",
        "command": "debug.removeWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "alt+d c",
        "command": "workbench.debug.action.focusCallStackView"
    },
    {
        "key": "alt+d alt+c",
        "command": "workbench.debug.action.focusCallStackView"
    },
    {
        "key": "f7",
        "command": "workbench.action.tasks.build"
    },
    {
        "key": "shift+f7",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "shift+alt+F5",
        "command": "workbench.action.debug.selectandstart"
    },

/* ---------------------------------------------------- */
        
/**** Search & Replace ****/

    {
        "key": "ctrl+f",
        "command": "actions.find"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.extensioneditor.showfind",
        "when": "extensionEditorWebviewFocus"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.webvieweditor.showFind",
        "when": "webviewEditorFocus"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
    },
    {
        "key": "ctrl+f",
        "command": "keybindings.editor.searchKeybindings",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+f",
        "command": "settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.extensioneditor.showfind",
        "when": "activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "ctrl+f",
        "command": "keybindings.editor.searchKeybindings",
        "when": "inKeybindings && !inKeybindingsSearch"
    },
    {
        "key": "ctrl+f",
        "command": "problems.action.focusFilter",
        "when": "problemsViewFocus"
    },
    /*
    {
        "key": "ctrl+[Comma] s",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+[Comma] ctrl+s",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] s",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] ctrl+shift+s",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    */
    {
        "key": "ctrl+- f",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+- ctrl+f",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+- f",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+- ctrl+f",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+- f",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+- ctrl+shift+f",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+- f",
        "command": "editor.action.nextSelectionMatchFindAction",
        "when": "editorTextFocus && !findWidgetVisible"
    },
    {
        "key": "ctrl+- ctrl+f",
        "command": "editor.action.nextSelectionMatchFindAction",
        "when": "editorTextFocus && !findWidgetVisible"
    },
    {
        "key": "ctrl+shift+- f",
        "command": "editor.action.previousSelectionMatchFindAction",
        "when": "editorTextFocus && !findWidgetVisible"
    },
    {
        "key": "ctrl+shift+- ctrl+shift+f",
        "command": "editor.action.previousSelectionMatchFindAction",
        "when": "editorTextFocus && !findWidgetVisible"
    },
    {
        "key": "ctrl+alt+- f",
        "command": "editor.action.selectHighlights",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+alt+- ctrl+alt+f",
        "command": "editor.action.selectHighlights",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+- f",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+- ctrl+f",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+- f",
        "command": "workbench.action.terminal.findNextTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+- ctrl+f",
        "command": "workbench.action.terminal.findNextTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+- f",
        "command": "workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+shift+- ctrl+shift+f",
        "command": "workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+shift+- f",
        "command": "workbench.action.terminal.findPreviousTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+- ctrl+shift+f",
        "command": "workbench.action.terminal.findPreviousTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+r",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus"
    },
    /*
    {
        "key": "ctrl+[Comma] r",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+[Comma] ctrl+r",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] r",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] ctrl+shift+r",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    */
    {
        "key": "ctrl+- r",
        "command": "editor.action.replaceOne",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+- ctrl+r",
        "command": "editor.action.replaceOne",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+alt+- r",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+alt+- ctrl+alt+r",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+[Period] f",
        "command": "workbench.action.findInFiles",
        "when": "editorFocus && !hasSearchResult"
    },
    {
        "key": "ctrl+[Period] ctrl+f",
        "command": "workbench.action.findInFiles",
        "when": "editorFocus && !hasSearchResult"
    },
    {
        "key": "ctrl+[Period] f",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "ctrl+[Period] ctrl+f",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "ctrl+shift+[Period] f",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "ctrl+shift+[Period] ctrl+shift+f",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "ctrl+up",
        "command": "search.action.focusSearchFromResults",
        "when": "searchViewletVisible"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+[Period] r",
        "command": "search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+[Period] ctrl+r",
        "command": "search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+alt+[Period] r",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+alt+[Period] ctrl+alt+r",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Period] r",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+[Period] ctrl+shift+r",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+f c",
        "command": "toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+f alt+c",
        "command": "toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+f r",
        "command": "toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+f alt+r",
        "command": "toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+f w",
        "command": "toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+f alt+w",
        "command": "toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+f c",
        "command": "toggleSearchCaseSensitive",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+f alt+c",
        "command": "toggleSearchCaseSensitive",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+f r",
        "command": "toggleSearchRegex",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+f alt+r",
        "command": "toggleSearchRegex",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+f w",
        "command": "toggleSearchWholeWord",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+f alt+w",
        "command": "toggleSearchWholeWord",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+f c",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+f alt+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+f c",
        "command": "workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f alt+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f r",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+f alt+r",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+f r",
        "command": "workbench.action.terminal.toggleFindRegexTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f alt+r",
        "command": "workbench.action.terminal.toggleFindRegexTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f w",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+f alt+w",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+f w",
        "command": "workbench.action.terminal.toggleFindWholeWordTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f alt+w",
        "command": "workbench.action.terminal.toggleFindWholeWordTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f e",
        "command": "search.action.collapseSearchResults",
        "when": "searchViewletVisible"
    },
    {
        "key": "alt+f alt+e",
        "command": "search.action.collapseSearchResults",
        "when": "searchViewletVisible"
    },

/* ---------------------------------------------------- */
    
/****  Problems panel ****/

    //added keybindings
    {
        "key": "ctrl+p",
        "command": "workbench.action.problems.focus",
        //"when": "!problemsViewFocus" //XXX doesn't work
    },
    {
        "key": "ctrl+shift+p",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus && !editorReadonly"
    },

/* ---------------------------------------------------- */

/****  Terminal ****/

    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.terminal.newInActiveWorkspace",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+q x",
        "command": "workbench.action.terminal.splitInActiveWorkspace",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+q ctrl+x",
        "command": "workbench.action.terminal.splitInActiveWorkspace",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a down",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a ctrl+down",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a up",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a ctrl+up",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a left",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a ctrl+left",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a right",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a ctrl+right",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocus"
    },
    {
        "key": "alt+t f",
        "command": "openInTerminal"
    },
    {
        "key": "alt+t alt+f",
        "command": "openInTerminal"
    },

/* ---------------------------------------------------- */
    
/****  Editor ****/

    {
        "key": "ctrl+e",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeOtherEditors",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+w",
        "command": "workbench.action.closeEditorsInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+w",
        "command": "workbench.action.closeEditorsInOtherGroups",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q x",
        "command": "workbench.action.splitEditorRight",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q ctrl+x",
        "command": "workbench.action.splitEditorRight",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q t",
        "command": "workbench.action.toggleEditorGroupLayout",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q ctrl+t",
        "command": "workbench.action.toggleEditorGroupLayout",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.action.minimizeOtherEditors",
        "when" : "editorFocus"
    },
    {
        "key": "ctrl+shift+m",
        "command": "workbench.action.evenEditorWidths",
        "when" : "editorFocus"
    },
    {
        "key": "ctrl+a right",
        "command": "workbench.action.nextEditorInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a ctrl+right",
        "command": "workbench.action.nextEditorInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a left",
        "command": "workbench.action.previousEditorInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a ctrl+left",
        "command": "workbench.action.previousEditorInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a down",
        "command": "workbench.action.focusNextGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a ctrl+down",
        "command": "workbench.action.focusNextGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a up",
        "command": "workbench.action.focusPreviousGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a ctrl+up",
        "command": "workbench.action.focusPreviousGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q left",
        "command": "workbench.action.moveEditorLeftInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q ctrl+left",
        "command": "workbench.action.moveEditorLeftInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q right",
        "command": "workbench.action.moveEditorRightInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q ctrl+right",
        "command": "workbench.action.moveEditorRightInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q down",
        "command": "workbench.action.moveEditorToNextGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q ctrl+down",
        "command": "workbench.action.moveEditorToNextGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q up",
        "command": "workbench.action.moveEditorToPreviousGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q ctrl+up",
        "command": "workbench.action.moveEditorToPreviousGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+q up",
        "command": "workbench.action.moveActiveEditorGroupUp",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+q ctrl+shift+up",
        "command": "workbench.action.moveActiveEditorGroupUp",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+q down",
        "command": "workbench.action.moveActiveEditorGroupDown",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+q ctrl+shift+down",
        "command": "workbench.action.moveActiveEditorGroupDown",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+q left",
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+q ctrl+shift+left",
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+q right",
        "command": "workbench.action.moveActiveEditorGroupRight",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+q ctrl+shift+right",
        "command": "workbench.action.moveActiveEditorGroupRight",
        "when": "editorFocus"
    },

/* ---------------------------------------------------- */

/**** BreadCrumbs ****/

    {
        "key": "ctrl+b",
        "command": "breadcrumbs.focusAndSelect",
        "when": "!breadcrumbsActive"
    },

/* ---------------------------------------------------- */

/**** Compare Editor (Alt+C) ****/

    {
        "key": "alt+c right",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+c alt+right",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+c down",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+c alt+down",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+c left",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+c alt+left",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+c down",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+c alt+down",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },

/* ---------------------------------------------------- */

/****  Code Formatting  ****/

    {
        "key": "Ctrl+tab",
        "command": "editor.action.formatSelection",
        "when": "editorHasSelection && editorTextFocus && !editorReadonly"
    },
    /*
    {
        "key": "tab",
        "command": "editor.action.format"
    },
    {
        "key": "tab",
        "command": "editor.action.reindentlines"
    },
    */

/* ---------------------------------------------------- */

/****  Sub-Word Navigation  ****/

    {   
        "key": "ctrl+alt+right",        
        "command": "cursorWordPartRight",
        "when": "textInputFocus"
    },
    {   
        "key": "ctrl+shift+alt+right",
        "command": "cursorWordPartRightSelect",
        "when": "textInputFocus"
    },
    {   
        "key": "ctrl+alt+left",
        "command": "cursorWordPartStartLeft",
        "when": "textInputFocus"
    },
    {   
        "key": "ctrl+shift+alt+left",
        "command": "cursorWordPartStartLeftSelect",
        "when": "textInputFocus"
    },
    {   
        "key": "ctrl+alt+backspace",
        "command": "deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {   
        "key": "ctrl+alt+delete",
        "command": "deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
    },

/* ---------------------------------------------------- */

/****  Line navigation  ****/

    {
        "key": "ctrl+l",
        "command": "workbench.action.gotoLine"
    },

/* ---------------------------------------------------- */
    
/**** Code Completion and suggestions ****/

    {
        "key": "meta+space",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "meta+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+meta+space",
        "command": "toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+meta+space",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },

/* ---------------------------------------------------- */
        
/**** Text Edition (XXX todo) ****/

    {
        "key": "alt+a",
        "command": "editor.action.selectAll",
        "when": "textInputFocus"
    },
    {
        "key": "alt+a",
        "command": "list.selectAll",
        "when": "listFocus && listSupportsMultiselect && !inputFocus"
    },

/* ---------------------------------------------------- */

/****  Ctrl+G similar to Esc  ****/

    {
        "key": "ctrl+g",
        "command": "workbench.action.terminal.clearSelection",
        "when": "terminalFocus && terminalTextSelected && !terminalFindWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.hideInterfaceOverview",
        "when": "interfaceOverviewVisible"
    },
    {
        "key": "ctrl+g",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
    },
    {
        "key": "ctrl+g",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
    },
    {
        "key": "ctrl+g",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "closeDirtyDiff",
        "when": "dirtyDiffVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeParameterHints",
        "when": "editorTextFocus && parameterHintsVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "closeReferenceSearchEditor",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeReviewPanel",
        "when": "reviewPanelVisible"
    },
    {
        "key": "ctrl+g",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "ctrl+g",
        "command": "leaveEditorMessage",
        "when": "messageVisible"
    },
    {
        "key": "ctrl+g",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
    },
    {
        "key": "ctrl+g",
        "command": "list.clear",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "notifications.hideList",
        "when": "notificationCenterVisible"
    },
    {
        "key": "ctrl+g",
        "command": "notifications.hideToasts",
        "when": "notificationToastsVisible"
    },
    {
        "key": "ctrl+g",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "search.action.cancel",
        "when": "listFocus && searchViewletVisible && !inputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "settings.action.clearSearchResults",
        "when": "inSettingsSearch"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+g ctrl+g",
        "command": "workbench.action.exitZenMode",
        "when": "inZenMode"
    },
    {
        "key": "ctrl+g",
        "command": "breadcrumbs.selectEditor",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus"
    },
    {
        "key": "ctrl+g",
        "command": "editor.action.webvieweditor.hideFind",
        "when": "webviewEditorFocus && webviewFindWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "macros.finishSearch",
        "when": "searchInputBoxFocus"
    },

/* ---------------------------------------------------- */

/**** Removed keybindings ****/

    {
        "key": "ctrl+[BracketRight]",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions"
    },
    {
        "key": "shift+alt+d",
        "command": "-extension.downloadSettings"
    },
    {
        "key": "shift+alt+u",
        "command": "-extension.updateSettings"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-editor.action.defineKeybinding",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-latex-workshop.build",
        "when": "editorTextFocus && !isMac"
    },
    {
        "key": "alt+meta+b",
        "command": "-latex-workshop.build",
        "when": "editorTextFocus && isMac"
    },
    {
        "key": "alt+meta+x",
        "command": "-workbench.view.extension.latex",
        "when": "isMac"
    },
    {
        "key": "ctrl+alt+x",
        "command": "-workbench.view.extension.latex"
    },
    {
        "key": "alt+meta+j",
        "command": "-latex-workshop.synctex",
        "when": "editorTextFocus && isMac"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-latex-workshop.synctex",
        "when": "editorTextFocus && !isMac"
    },
    {
        "key": "ctrl+alt+v",
        "command": "-latex-workshop.view",
        "when": "editorTextFocus && !isMac"
    },
    {
        "key": "alt+meta+v",
        "command": "-latex-workshop.view",
        "when": "editorTextFocus && isMac"
    },
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openFolder"
    },
    {
        "key": "ctrl+k f",
        "command": "-workbench.action.closeFolder"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+f9",
        "command": "-editor.debug.action.toggleInlineBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "delete",
        "command": "-debug.removeBreakpoint",
        "when": "breakpointsFocused && !breakpointSelected"
    },
    {
        "key": "space",
        "command": "-debug.toggleBreakpoint",
        "when": "breakpointsFocused && !inputFocus"
    },
    {
        "key": "f2",
        "command": "-debug.renameWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "f2",
        "command": "-debug.setVariable",
        "when": "variablesFocused"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView"
    },
    {
        "key": "shift+alt+0",
        "command": "-workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.openNextRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+meta+w",
        "command": "-workbench.action.toggleTabsVisibility"
    },
    {
        "key": "ctrl+k down",
        "command": "-workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k up",
        "command": "-workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "ctrl+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "shift+alt+1",
        "command": "-workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "shift+alt+9",
        "command": "-workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+k enter",
        "command": "-workbench.action.keepEditor"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "ctrl+k o",
        "command": "-workbench.action.files.showOpenedFileInNewWindow"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+f3",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "ctrl+f3",
        "command": "-editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+f3",
        "command": "-editor.action.previousSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "-editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "alt+enter",
        "command": "-editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "-editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[IntlBackslash]",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.extensioneditor.showfind",
        "when": "extensionEditorWebviewFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "webviewEditorFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-keybindings.editor.searchKeybindings",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchCaseSensitive",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchRegex",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "f4",
        "command": "-goToNextReference",
        "when": "referenceSearchVisible"
    },
    {
        "key": "f4",
        "command": "-goToNextReferenceFromEmbeddedEditor",
        "when": "inReferenceSearchEditor"
    },
    {
        "key": "shift+f4",
        "command": "-goToPreviousReference",
        "when": "referenceSearchVisible"
    },
    {
        "key": "shift+f4",
        "command": "-goToPreviousReferenceFromEmbeddedEditor",
        "when": "inReferenceSearchEditor"
    },
    {
        "key": "ctrl+shift+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible"
    },
    {
        "key": "ctrl+c",
        "command": "-search.action.copyMatch",
        "when": "fileMatchOrMatchFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "-search.action.copyPath",
        "when": "fileMatchOrFolderMatchFocus"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+up",
        "command": "-search.action.focusSearchFromResults",
        "when": "firstMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus"
    },
    {
        "key": "shift+end",
        "command": "-workbench.action.terminal.scrollToBottom",
        "when": "terminalFocus"
    },
    {
        "key": "shift+home",
        "command": "-workbench.action.terminal.scrollToTop",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-workbench.action.terminal.scrollDown",
        "when": "terminalFocus"
    },
    {
        "key": "shift+pagedown",
        "command": "-workbench.action.terminal.scrollDownPage",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-workbench.action.terminal.scrollUp",
        "when": "terminalFocus"
    },
    {
        "key": "shift+pageup",
        "command": "-workbench.action.terminal.scrollUpPage",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNextTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "shift+f3",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "shift+f3",
        "command": "-workbench.action.terminal.findPreviousTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegexTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWordTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+[Period]",
        "command": "-breadcrumbs.focus"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "-breadcrumbs.focusAndSelect"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+space",
        "command": "-toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+shift+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+shift+alt+b",
        "command": "-xmlTools.formatAsXml"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasSelection && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.extensioneditor.showfind",
        "when": "activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "ctrl+f",
        "command": "-keybindings.editor.searchKeybindings",
        "when": "inKeybindings && !inKeybindingsSearch"
    },
    {
        "key": "ctrl+f",
        "command": "-problems.action.focusFilter",
        "when": "problemsViewFocus"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "-breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+l ctrl+w",
        "command": "-latex-workshop.surround",
        "when": "editorHasSelection && editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "ctrl+a",
        "command": "-editor.action.selectAll",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+a",
        "command": "-editor.action.webvieweditor.selectAll",
        "when": "!editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
    },
    {
        "key": "ctrl+a",
        "command": "-editor.action.webvieweditor.selectAll",
        "when": "!editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+a",
        "command": "-list.selectAll",
        "when": "listFocus && listSupportsMultiselect && !inputFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+m ctrl+shift+b",
        "command": "-latex-workshop.shortcut.mathbb",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+m ctrl+b",
        "command": "-latex-workshop.shortcut.mathbf",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+m ctrl+c",
        "command": "-latex-workshop.shortcut.mathcal",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+m ctrl+i",
        "command": "-latex-workshop.shortcut.mathit",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+m ctrl+r",
        "command": "-latex-workshop.shortcut.mathrm",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+m ctrl+s",
        "command": "-latex-workshop.shortcut.mathsf",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+m ctrl+t",
        "command": "-latex-workshop.shortcut.mathtt",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "alt+meta+c",
        "command": "-latex-workshop.clean",
        "when": "editorTextFocus && isMac"
    },
    {
        "key": "ctrl+alt+c",
        "command": "-latex-workshop.clean",
        "when": "editorTextFocus && !isMac"
    },
    {
        "key": "alt+enter",
        "command": "-latex-workshop.onAltEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'latex'"
    },
    {
        "key": "enter",
        "command": "-latex-workshop.onEnterKey",
        "when": "editorTextFocus && vim.active && !editorReadonly && !suggestWidgetVisible && editorLangId == 'latex' && vim.mode == 'Insert'"
    },
    {
        "key": "enter",
        "command": "-latex-workshop.onEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && !vim.active && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+e",
        "command": "-latex-workshop.shortcut.emph",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+enter",
        "command": "-latex-workshop.shortcut.item",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+b",
        "command": "-latex-workshop.shortcut.textbf",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+i",
        "command": "-latex-workshop.shortcut.textit",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+n",
        "command": "-latex-workshop.shortcut.textnormal",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+r",
        "command": "-latex-workshop.shortcut.textrm",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+c",
        "command": "-latex-workshop.shortcut.textsc",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+s",
        "command": "-latex-workshop.shortcut.textsl",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+-",
        "command": "-latex-workshop.shortcut.textsubscript",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+6",
        "command": "-latex-workshop.shortcut.textsuperscript",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+t",
        "command": "-latex-workshop.shortcut.texttt",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+l ctrl+u",
        "command": "-latex-workshop.shortcut.underline",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "f7",
        "command": "-editor.action.diffReview.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "f7",
        "command": "-editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "shift+f7",
        "command": "-editor.action.diffReview.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "shift+f7",
        "command": "-editor.action.wordHighlight.prev",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+f5",
        "command": "-workbench.action.debug.run",
        "when": "!inDebugMode"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus"
    },

/* ---------------------------------------------------- */

/**** Automatic additions (should be empty) ****/

    {},
]
