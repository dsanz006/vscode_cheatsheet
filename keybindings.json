[
    /*

    More info here: https://code.visualstudio.com/docs/getstarted/keybindings

    Pending issues: #59084

    Some more can be found on VS Code source code. Under src/vs/ search for "new RawContextKey<"

    Todo:
        · Text edition
        · IntelliSense (Code completion & navigation)
        · Breadcrumbs
        · Refactoring/code actions ??

    Some commands are custom macros, which allow concatenating multiple commands. This is done with
    an extension: https://marketplace.visualstudio.com/items?itemName=geddski.macros

    ----------------------------------------------------------

    Keys:

    <a>     : Arrows
    Meta    : Super key

    General commands:
     · Ctrl+G           : Leave, cancel, exit... (depends on context)
     · Enter            : Open file (on quick open, problems panel, file explorer...), expand/collapse folder
     · Ctrl+Enter       : Open file to side editor
     · Left/Right       : Expand/Collapse
     · BkSpc/Supr       : Delete/Remove

    General MAJOR-KEY meanings - Used with Meta (Super) key:
     · A        : IntelliSense (Code completion & navigation)
     · F        : Menu & Sidebar
     · E        : Editor
     · W        : Explorer
     · D        : Debug
     · G        : Panel
     · S        : Search
     · R        : Problems panel
     · T        : Terminal
     · C        : Compare editor

    General MINOR-KEY meanings:
     · A        : Focus/View (Toggle)
     · X        : Split
     · W        : Next/other
     · Q        : Previous
     · E        : Expand/Contract
     · F        : File (open, show...)
     · N        : New/Create
     · T        : Toggle
     · D        : Close
     · <a>      : Move

    ----------------------------------------------------------

    Focus on views:
     · Meta+F A             : Focus on sidebar (XXX toggle not suported yet, focus needed: issue #59084)
     · Meta+W A             : Focus on file explorer (toggle)
     · Meta+D A             : Focus on debug bar (XXX toggle not suported yet, focus needed: issue #59084)
     · Meta+E A             : Focus on active editor (from anywhere)
     · Meta+S A             : Focus on search panel (XXX toggle not suported yet, focus needed: issue #59084)
     · Meta+R A             : Focus on problems panel (XXX toggle not suported yet, focus needed: issue #59084)
     · Meta+T A             : Focus on terminal (toggle)
    
    Menu & Sidebar (Meta+F):
     · Meta+F A             : Focus on sidebar (XXX toggle not suported yet, focus needed: issue #59084)
     · Meta+F E             : Expand/collapse Sidebar
     · Meta+F G             : Quick open...
     · Meta+F C             : Command palette...
     · Meta+F R             : Open recent...
     · Meta+F W             : Open workspace...
     · Meta+F D             : Open directory...
     · Meta+F F             : Open file...
     · Meta+F N             : Open active file in new window
     · Meta+Shft+F N        : Duplicate workspace in new window
     · Meta+F BkSp/Supr     : Close window

    File explorer (Meta+W):
     · Meta+W A             : Focus on file explorer (toggle)
     · Meta+W N             : New file
     · Meta+Shft+W N        : New folder
     · Meta+W E             : Collapse all folders in file explorer
     · Meta+W F             : Reveal current file in file explorer (if in workspace)
     · Meta+W D             : Hide file explorer

    Debug (Meta+D):
     · Meta+D A             : Focus on debug bar (XXX toggle not suported yet, focus needed: issue #59084)
     · Meta+Shft+D A        : Choose debug configuration and start debuging
     · Meta+D B             : Toggle breakpoint
     · Meta+Shft+D B        : Add conditional breakpoint
     · Meta+Ctrl+Shft+D B   : Add function breakpoint
     · Meta+D T             : Add tracepoint (logpoint)
     · Meta+D E             : Enable/disable breakpoint
     · Meta+D W             : Go to next breakpoint
     · Meta+D Q             : Go to previous breakpoint
     · Meta+D R             : Focus on breakpoints view
       · Supr/BkSp          : (breakpointsFocused) Remove breakpoint
       · E                  : (breakpointsFocused) Enable/Disable breakpoint
       · Enter (Ctrl+Enter) : (breakpointsFocused) Open breakpoint (to side)
       · Ctrl+E             : (breakpointsFocused) enable all breakpoints
       · Ctrl+Shft+E        : (breakpointsFocused) disable all breakpoints
       · Ctrl+Shft+BkSp     : (breakpointsFocused) remove all breakpoints
     · Meta+D V             : Focus on variables view
     · Meta+D Z             : Focus on watch view
     · Meta+D C             : Focus on call stack view
     · Meta+D D             : Hide debug bar 
     · F5, F6, F10, F11     : Debugging keys

    Editor (Meta+E / Ctrl+E):
     · Meta+E A             : Focus on active editor (from anywhere)
     · Meta+E D             : Close active file editor
     · Meta+Shft+E D        : Close all other files in group
     · Meta+E F             : Close active editor group
     · Meta+Shft+E F        : Close all other editor groups
     · Meta+E X             : Split editor vertically
     · Meta+E T             : Toggle layout (horiz./vert.)
     · Meta+E E             : Expand editor group
     · Meta+Shft+E E        : Reset editor group sizes
     · Meta+E W             : Focus on next file of group
     · Meta+E Q             : Focus on previous file of group
     · Meta+Shft+E W        : Focus on next editor group
     · Meta+Shft+E Q        : Focus on previous editor group
     · Meta+E R             : Focus on recent file on history
     · Ctrl+E 1-9           : Focus on file index 1-9 of group
     · Ctrl+Shift+E 1-9     : Focus on editor group index 1-9
     · Ctrl+E <a>           : Move editor to above/below/left/right group
     · Ctrl+Shft+E <a>      : Move editor left/right in froup
     · Ctrl+Alt+Shft+E <a>  : Move editor group to above/below/left/right

    Panel (Meta+G):
     · Meta+G D             : Hide Panel

    Search & Replace (Meta+S / Ctrl+S / Ctrl+R):
     · Ctrl+S               : Focus on find widget
     · Ctrl+, S             : Show next match (from widget or selected)
     · Ctrl+Shft+, S        : Show previous match (from widget or selected)
     · Ctrl+Alt+, S         : Select all matches (from widget or selected)
     · Ctrl+R               : Focus on replace widget
     · Ctrl+, R             : Replace current match (widget replace)
     · Ctrl+Alt+, R         : Replace all matches (widget replace)
     · Ctrl+Shft+S          : Search on search panel
     · Ctrl+<down>          : Focus on search/replace results
     · Ctrl+<up>            : Focus on search input box
     · Ctrl+. S             : Show next search panel match / search selected
     · Ctrl+Shft+. S        : Show previous search panel match
     · Ctrl+Shft+R          : Replace on search panel
     · Ctrl+. R             : Replace current match (search panel replace)
     · Ctrl+Shft+. R        : Replace all file matches (search panel replace)
     · Ctrl+Alt+. R         : Replace all matches (search panel replace)
     · Meta+S A             : Focus on search panel (same as Ctrl+Shft+S)
     · Meta+S E             : Collapse search results
     · Meta+S C             : Toggle search case sensitive
     · Meta+S X             : Toggle search regex
     · Meta+S W             : Toggle search whole word
     · Meta+S D             : Finish search

    Problems panel (Meta+R):
     · Meta+R A             : Focus on problems panel (XXX toggle not suported yet, focus needed: issue #59084)
     · Meta+R D             : Hide problems panel

    Terminal (Meta+T):
     · Meta+T A             : Focus on terminal (toggle)
     · Meta+T N             : Add new terminal (another window) and focus
     · Meta+T X             : Split terminal (add a pane and focus)
     · Meta+T W             : Switch focus to next terminal window
     · Meta+T Q             : Switch focus to previous terminal window
     · Meta+Shift+T W       : Switch focus to next terminal pane
     · Meta+Shift+T Q       : Switch focus to previous terminal pane
       · Ctrl+Shift+C       : (terminalFocus) Copy
       · Ctrl+Shift+V       : (terminalFocus) Paste
       · Ctrl+D             : (terminalFocus) Kill
     · Meta+T E             : Toggle terminal Expand/collapse
     · Meta+T F             : Open new terminal in location of current file
     · Meta+T D             : Hide terminal panel

    Compare Editor (Meta+C):
     · Meta+C W             : Go to next change
     · Meta+C Q             : Go to previous change

    Text Edition (XXX todo):
     · Ctrl+X S             : Save file
     · Ctrl+Shft+X S        : Save file as...
     · Ctrl+X C             : Cut text
     · Ctrl+, E             : Focus on active editor (from anywhere)

    Building tasks:
     · Ctrl+Shift+B         : Run default build task
     · Ctrl+Shift+Alt+B     : Run non-default task (choose)

    BreadCrumbs:
     · Ctrl+Shift+I:        : Shows BreadCrumbs view of current file

    ----------------------------------------------------------

    Editor :: Multiple Cursors:
     · Ctrl+Shift+Up/Down           : Add cursor on next/previous line
     · Alt+Click                    : Add cursor on mouse click

    Editor :: Text Selection:
     · Ctrl+I                       : Select current line
     · Shift+Left/Right             : Select next/previous char
     · Ctrl+Shift+Left/Right        : Select next/previous word
     · Ctrl+Shift+Alt+Left/Right    : Select next/previous sub-word
     · Shift+Up/Down                : Select/deselect next/previous line
     · Ctrl+Shift+Up/Down           : Add next/previous line to selection
     · Ctrl+D                       : Select current word, or select next word occurrence
     · Ctrl+U                       : Soft undo: deselect last selection added with Ctrl+D
     · Ctrl+Shift+L                 : Select all occurrences of currently selected text
     · Alt+Up/Down                  : Move selected text up/down

    Editor :: Navigation:
     · Ctrl+L                       : Go to Line

    ---------------------------------------------------------- 
    
    */



/* ---------------------------------------------------- */
        
/**** Menu & Sidebar (Meta+F) ****/
    
    {
        "key": "meta+f a",
        "command": "workbench.action.focusSideBar"
    },
    /*
    {
        "key": "meta+f a",
        "command": "workbench.action.focusActiveEditorGroup",
        //XXX missing: a) "when": "sideBarFocus" 
        //             b) "focusViewlet == workbench.view.explorer" || "focusViewlet == workbench.view.search" || ...
        //"when": "activeViewlet == workbench.view.explorer"
        //"when": "explorerViewletFocus"
        //"when": "filesExplorerFocus"
    },
    */
    {
        "key": "meta+f e",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "meta+f meta+e",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "meta+f g",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "meta+f meta+g",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "meta+f c",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "meta+f meta+c",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "meta+f r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "meta+f meta+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "meta+f w",
        "command": "workbench.action.openWorkspace"
    },
    {
        "key": "meta+f meta+w",
        "command": "workbench.action.openWorkspace"
    },
    {
        "key": "meta+f d",
        "command": "workbench.action.files.openFolder"
    },
    {
        "key": "meta+f meta+d",
        "command": "workbench.action.files.openFolder"
    },
    {
        "key": "meta+f f",
        "command": "workbench.action.files.openFile"
    },
    {
        "key": "meta+f meta+f",
        "command": "workbench.action.files.openFile"
    },
    {
        "key": "meta+f n",
        "command": "workbench.action.files.showOpenedFileInNewWindow"
    },
    {
        "key": "meta+f meta+n",
        "command": "workbench.action.files.showOpenedFileInNewWindow"
    },
    {
        "key": "meta+shift+f n",
        "command": "workbench.action.duplicateWorkspaceInNewWindow"
    },
    {
        "key": "meta+shift+f meta+shift+n",
        "command": "workbench.action.duplicateWorkspaceInNewWindow"
    },
    {
        "key":"meta+f backspace",
        "command": "workbench.action.closeWindow"
    },
    {
        "key":"meta+f delete",
        "command": "workbench.action.closeWindow"
    },

/* ---------------------------------------------------- */
    
/**** File Explorer (Meta+W) ****/

    {
        "key": "meta+w a",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "!filesExplorerFocus"
    },
    {
        "key": "meta+w meta+a",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "!filesExplorerFocus"
    },
    {
        "key": "meta+w a",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "filesExplorerFocus"
    },
    {
        "key": "meta+w meta+a",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "filesExplorerFocus"
    },
    {
        "key": "meta+w f",
        "command": "revealInExplorer"
    },
    {
        "key": "meta+w meta+f",
        "command": "revealInExplorer"
    },
    {
        "key": "meta+w e",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "meta+w meta+e",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "meta+w n",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus"
    },
    {
        "key": "meta+w meta+n",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus"
    },
    {
        "key": "meta+shift+w n",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus"
    },
    {
        "key": "meta+shift+w meta+shift+n",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus"
    },
    {
        "key": "meta+w d",
        "command": "workbench.action.toggleSidebarVisibility",
        "when" : "activeViewlet == 'workbench.view.explorer'"
    },
    {
        "key": "meta+w meta+d",
        "command": "workbench.action.toggleSidebarVisibility",
        "when" : "activeViewlet == 'workbench.view.explorer'"
    },

/* ---------------------------------------------------- */
    
/**** Debug (Meta+D) ****/

    {
        "key": "meta+d a",
        "command": "workbench.view.debug"
    },
    {
        "key": "meta+d meta+a",
        "command": "workbench.view.debug"
    },
    {
        "key": "shift+meta+d a",
        "command": "workbench.action.debug.selectandstart"
    },
    {
        "key": "shift+meta+d shift+meta+a",
        "command": "workbench.action.debug.selectandstart"
    },
    {
        "key": "meta+d b",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "meta+d meta+b",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+meta+d b",
        "command": "editor.debug.action.conditionalBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+meta+d shift+meta+b",
        "command": "editor.debug.action.conditionalBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+meta+d b",
        "command": "workbench.debug.viewlet.action.addFunctionBreakpointAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+meta+d ctrl+shift+meta+b",
        "command": "workbench.debug.viewlet.action.addFunctionBreakpointAction",
        "when": "editorTextFocus"
    },
    {
        "key": "meta+d t",
        "command": "editor.debug.action.toggleLogPoint",
        "when": "editorTextFocus"
    },
    {
        "key": "meta+d meta+t",
        "command": "editor.debug.action.toggleLogPoint",
        "when": "editorTextFocus"
    },
    {
        "key": "meta+d e",
        "command": "debug.enableOrDisableBreakpoint",
        "when": "!breakpointsFocused"
    },
    {
        "key": "meta+d meta+e",
        "command": "debug.enableOrDisableBreakpoint",
        "when": "!breakpointsFocused"
    },
    {
        "key": "meta+d w",
        "command": "editor.debug.action.goToNextBreakpoint",
    },
    {
        "key": "meta+d meta+w",
        "command": "editor.debug.action.goToNextBreakpoint"
    },
    {
        "key": "meta+d q",
        "command": "editor.debug.action.goToPreviousBreakpoint"
    },
    {
        "key": "meta+d meta+q",
        "command": "editor.debug.action.goToPreviousBreakpoint"
    },
    {
        "key": "meta+d r",
        "command": "workbench.debug.action.focusBreakpointsView"
    },
    {
        "key": "meta+d meta+r",
        "command": "workbench.debug.action.focusBreakpointsView"
    },
    {
        "key": "delete",
        "command": "debug.removeBreakpoint",
        "when": "breakpointsFocused"
    },
    {
        "key": "backspace",
        "command": "debug.removeBreakpoint",
        "when": "breakpointsFocused"
    },
    {
        "key": "e",
        "command": "debug.toggleBreakpoint",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.debug.viewlet.action.enableAllBreakpoints",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.debug.viewlet.action.disableAllBreakpoints",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+shift+backspace",
        "command": "workbench.debug.viewlet.action.removeAllBreakpoints",
        "when": "breakpointsFocused"
    },
    {
        "key": "meta+d v",
        "command": "workbench.debug.action.focusVariablesView"
    },
    {
        "key": "meta+d meta+v",
        "command": "workbench.debug.action.focusVariablesView"
    },
    {
        "key": "meta+d z",
        "command": "workbench.debug.action.focusWatchView"
    },
    {
        "key": "meta+d meta+z",
        "command": "workbench.debug.action.focusWatchView"
    },
    {
        "key": "backspace",
        "command": "debug.removeWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "delete",
        "command": "debug.removeWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "meta+d c",
        "command": "workbench.debug.action.focusCallStackView"
    },
    {
        "key": "meta+d meta+c",
        "command": "workbench.debug.action.focusCallStackView"
    },
    {
        "key": "meta+d d",
        "command": "workbench.action.toggleSidebarVisibility",
        "when" : "activeViewlet == 'workbench.view.debug'"
    },
    {
        "key": "meta+d meta+d",
        "command": "workbench.action.toggleSidebarVisibility",
        "when" : "activeViewlet == 'workbench.view.debug'"
    },

/* ---------------------------------------------------- */

/****  Editor (Meta+E / Ctrl+E) ****/

{
        "key": "meta+e a",
        "command": "workbench.action.focusActiveEditorGroup",
    },
    {
        "key": "meta+e meta+a",
        "command": "workbench.action.focusActiveEditorGroup",
    },
    {
        "key": "meta+e d",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "meta+e meta+d",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "shift+meta+e d",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "shift+meta+e shift+meta+d",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "meta+e f",
        "command": "workbench.action.closeEditorsInGroup"
    },
    {
        "key": "meta+e meta+f",
        "command": "workbench.action.closeEditorsInGroup"
    },
    {
        "key": "shift+meta+e f",
        "command": "workbench.action.closeEditorsInOtherGroups"
    },
    {
        "key": "shift+meta+e shift+meta+f",
        "command": "workbench.action.closeEditorsInOtherGroups"
    },
    {
        "key": "meta+e x",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "meta+e meta+x",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "meta+e t",
        "command": "workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "meta+e meta+t",
        "command": "workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "meta+e e",
        "command": "workbench.action.minimizeOtherEditors"
    },
    {
        "key": "meta+e meta+e",
        "command": "workbench.action.minimizeOtherEditors"
    },
    {
        "key": "shift+meta+e e",
        "command": "workbench.action.evenEditorWidths"
    },
    {
        "key": "shift+meta+e shift+meta+e",
        "command": "workbench.action.evenEditorWidths"
    },
    {
        "key": "meta+e w",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "meta+e meta+w",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "meta+e q",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "meta+e meta+q",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "meta+shift+e w",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "meta+shift+e meta+shift+w",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "meta+shift+e q",
        "command": "workbench.action.focusPreviousGroup"
    },
    {
        "key": "meta+shift+e meta+shift+q",
        "command": "workbench.action.focusPreviousGroup"
    },
    {
        "key": "meta+e r",
        "command": "workbench.action.openPreviousEditorFromHistory"
    },
    {
        "key": "meta+e meta+r",
        "command": "workbench.action.openPreviousEditorFromHistory"
    },
    {
        "key": "meta+shift+e 1",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "meta+shift+e meta+shift+1",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "meta+shift+e 2",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "meta+shift+e meta+shift+2",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "meta+shift+e 3",
        "command": "workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "meta+shift+e meta+shift+3",
        "command": "workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "meta+shift+e 4",
        "command": "workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "meta+shift+e meta+shift+4",
        "command": "workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "meta+shift+e 5",
        "command": "workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "meta+shift+e meta+shift+5",
        "command": "workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "meta+shift+e 6",
        "command": "workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "meta+shift+e meta+shift+6",
        "command": "workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "meta+shift+e 7",
        "command": "workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "meta+shift+e meta+shift+7",
        "command": "workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "meta+shift+e 8",
        "command": "workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "meta+shift+e meta+shift+8",
        "command": "workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "meta+shift+e 9",
        "command": "workbench.action.lastEditorInGroup"
    },
    {
        "key": "meta+shift+e meta+shift+9",
        "command": "workbench.action.lastEditorInGroup"
    },
    {
        "key": "meta+e 1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "meta+e meta+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "meta+e 2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "meta+e meta+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "meta+e 3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "meta+e meta+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "meta+e 4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "meta+e meta+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "meta+e 5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "meta+e meta+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "meta+e 6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "meta+e meta+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "meta+e 7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "meta+e meta+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "meta+e 8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "meta+e meta+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "meta+e 9",
        "command": "workbench.action.openEditorAtIndex9"
    },
    {
        "key": "meta+e meta+9",
        "command": "workbench.action.openEditorAtIndex9"
    },
    {
        "key": "ctrl+e right",
        "command": "workbench.action.moveEditorToRightGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+e ctrl+right",
        "command": "workbench.action.moveEditorToRightGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+e left",
        "command": "workbench.action.moveEditorToLeftGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+e ctrl+left",
        "command": "workbench.action.moveEditorToLeftGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+e up",
        "command": "workbench.action.moveEditorToAboveGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+e ctrl+up",
        "command": "workbench.action.moveEditorToAboveGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+e down",
        "command": "workbench.action.moveEditorToBelowGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+e ctrl+down",
        "command": "workbench.action.moveEditorToBelowGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+e left",
        "command": "workbench.action.moveEditorLeftInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+e ctrl+shift+left",
        "command": "workbench.action.moveEditorLeftInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+e right",
        "command": "workbench.action.moveEditorRightInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+e ctrl+shift+right",
        "command": "workbench.action.moveEditorRightInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+e up",
        "command": "workbench.action.moveActiveEditorGroupUp",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+e ctrl+shift+alt+up",
        "command": "workbench.action.moveActiveEditorGroupUp",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+e down",
        "command": "workbench.action.moveActiveEditorGroupDown",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+e ctrl+shift+alt+down",
        "command": "workbench.action.moveActiveEditorGroupDown",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+e left",
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+e ctrl+shift+alt+left",
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+e right",
        "command": "workbench.action.moveActiveEditorGroupRight",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+e ctrl+shift+alt+right",
        "command": "workbench.action.moveActiveEditorGroupRight",
        "when": "editorFocus"
    },

/* ---------------------------------------------------- */
    
/**** Panel (Meta+G) ****/

    {
        "key": "meta+g d",
        "command": "workbench.action.closePanel"
    },
    {
        "key": "meta+g meta+d",
        "command": "workbench.action.closePanel"
    },
    {
        "key": "meta+g a",
        "command": "workbench.action.focusPanel"
    },
    {
        "key": "meta+g meta+a",
        "command": "workbench.action.focusPanel"
    },

/* ---------------------------------------------------- */
        
/**** Search & Replace (Meta+S / Ctrl+S / Ctrl+R) ****/

    {
        "key": "ctrl+s",
        "command": "actions.find"
    },
    {
        "key": "ctrl+s",
        "command": "editor.action.extensioneditor.showfind",
        "when": "extensionEditorWebviewFocus"
    },
    {
        "key": "ctrl+s",
        "command": "editor.action.webvieweditor.showFind",
        "when": "webviewEditorFocus"
    },
    {
        "key": "ctrl+s",
        "command": "editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+s",
        "command": "editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
    },
    {
        "key": "ctrl+s",
        "command": "keybindings.editor.searchKeybindings",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+s",
        "command": "settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+[Comma] s",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+[Comma] ctrl+s",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] s",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] ctrl+shift+s",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+[Comma] s",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+[Comma] ctrl+s",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] s",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] ctrl+shift+s",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+[Comma] s",
        "command": "editor.action.nextSelectionMatchFindAction",
        "when": "editorTextFocus && !findWidgetVisible"
    },
    {
        "key": "ctrl+[Comma] ctrl+s",
        "command": "editor.action.nextSelectionMatchFindAction",
        "when": "editorTextFocus && !findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] s",
        "command": "editor.action.previousSelectionMatchFindAction",
        "when": "editorTextFocus && !findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] ctrl+shift+s",
        "command": "editor.action.previousSelectionMatchFindAction",
        "when": "editorTextFocus && !findWidgetVisible"
    },
    {
        "key": "ctrl+alt+[Comma] s",
        "command": "editor.action.selectHighlights",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+alt+[Comma] ctrl+alt+s",
        "command": "editor.action.selectHighlights",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+[Comma] s",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+[Comma] ctrl+s",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+[Comma] s",
        "command": "workbench.action.terminal.findNextTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+[Comma] ctrl+s",
        "command": "workbench.action.terminal.findNextTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+[Comma] s",
        "command": "workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+shift+[Comma] ctrl+shift+s",
        "command": "workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+shift+[Comma] s",
        "command": "workbench.action.terminal.findPreviousTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+[Comma] ctrl+shift+s",
        "command": "workbench.action.terminal.findPreviousTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+r",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+[Comma] r",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+[Comma] ctrl+r",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] r",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Comma] ctrl+shift+r",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+[Comma] r",
        "command": "editor.action.replaceOne",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+[Comma] ctrl+r",
        "command": "editor.action.replaceOne",
        "when": "editorTextFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+alt+[Comma] r",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+alt+[Comma] ctrl+alt+r",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "meta+s a",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "meta+s meta+a",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+[Period] s",
        "command": "workbench.action.findInFiles",
        "when": "editorFocus && !hasSearchResult"
    },
    {
        "key": "ctrl+[Period] ctrl+s",
        "command": "workbench.action.findInFiles",
        "when": "editorFocus && !hasSearchResult"
    },
    {
        "key": "ctrl+[Period] s",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "ctrl+[Period] ctrl+s",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "ctrl+shift+[Period] s",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "ctrl+shift+[Period] ctrl+shift+s",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "ctrl+up",
        "command": "search.action.focusSearchFromResults",
        "when": "searchViewletVisible"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+[Period] r",
        "command": "search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+[Period] ctrl+r",
        "command": "search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+alt+[Period] r",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+alt+[Period] ctrl+alt+r",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[Period] r",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+[Period] ctrl+shift+r",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "meta+s c",
        "command": "toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "meta+s meta+c",
        "command": "toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "meta+s x",
        "command": "toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "meta+s meta+x",
        "command": "toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "meta+s w",
        "command": "toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "meta+s meta+w",
        "command": "toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "meta+s c",
        "command": "toggleSearchCaseSensitive",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "meta+s meta+c",
        "command": "toggleSearchCaseSensitive",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "meta+s x",
        "command": "toggleSearchRegex",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "meta+s meta+x",
        "command": "toggleSearchRegex",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "meta+s w",
        "command": "toggleSearchWholeWord",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "meta+s meta+w",
        "command": "toggleSearchWholeWord",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "meta+s c",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "meta+s meta+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "meta+s c",
        "command": "workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "meta+s meta+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "meta+s x",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "meta+s meta+x",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "meta+s x",
        "command": "workbench.action.terminal.toggleFindRegexTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "meta+s meta+x",
        "command": "workbench.action.terminal.toggleFindRegexTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "meta+s w",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "meta+s meta+w",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "meta+s w",
        "command": "workbench.action.terminal.toggleFindWholeWordTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "meta+s meta+w",
        "command": "workbench.action.terminal.toggleFindWholeWordTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "meta+s e",
        "command": "search.action.collapseSearchResults"
    },
    {
        "key": "meta+s meta+e",
        "command": "search.action.collapseSearchResults"
    },
    {
        "key": "meta+s d",
        "command": "macros.finishSearch",
        "when": "searchViewletVisible"
    },
    {
        "key": "meta+s meta+d",
        "command": "macros.finishSearch",
        "when": "searchViewletVisible"
    },

/* ---------------------------------------------------- */
    
/****  Problems panel (Meta+R) ****/

    //added keybindings
    {
        "key": "meta+r a",
        "command": "workbench.action.problems.focus",
        // "when": "!problemsViewFocus" //XXX doesn't work
    },
    {
        "key": "meta+r meta+a",
        "command": "workbench.action.problems.focus",
        //"when": "!problemsViewFocus" //XXX doesn't work
    },
    /*
    //XXX not working, as "problemsViewFocus" doesn't work
    {
        "key": "meta+r a",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "problemsViewFocus"
    },
    {
        "key": "meta+r meta+a",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "problemsViewFocus"
    },
    */
    {
        "key": "meta+r d",
        "command": "workbench.action.closePanel",
        "when": "activePanel == 'workbench.panel.markers'" //when problems view is visible
    },
    {
        "key": "meta+r meta+d",
        "command": "workbench.action.closePanel",
        "when": "activePanel == 'workbench.panel.markers'" //when problems view is visible
    },

/* ---------------------------------------------------- */

/****  Terminal (Meta+T) ****/

    {
        "key": "meta+t a",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "meta+t meta+a",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "meta+t a",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "meta+t meta+a",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "meta+t n",
        "command": "workbench.action.terminal.newInActiveWorkspace"
    },
    {
        "key": "meta+t meta+n",
        "command": "workbench.action.terminal.newInActiveWorkspace"
    },
    {
        "key": "meta+t x",
        "command": "workbench.action.terminal.splitInActiveWorkspace",
    },
    {
        "key": "meta+t meta+x",
        "command": "workbench.action.terminal.splitInActiveWorkspace",
    },
    {
        "key": "meta+t w",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "meta+t meta+w",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "meta+t q",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "meta+t meta+q",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "meta+shift+t w",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "meta+shift+t meta+shift+w",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "meta+shift+t q",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "meta+shift+t meta+shift+q",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "meta+t e",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "meta+t meta+e",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "meta+t f",
        "command": "openInTerminal"
    },
    {
        "key": "meta+t meta+f",
        "command": "openInTerminal"
    },
    {
        "key": "meta+t d",
        "command": "workbench.action.closePanel",
        "when": "activePanel == 'workbench.panel.terminal'" //when terminal is visible
    },
    {
        "key": "meta+t meta+d",
        "command": "workbench.action.closePanel",
        "when": "activePanel == 'workbench.panel.terminal'" //when terminal is visible
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems"
    },

/* ---------------------------------------------------- */

/**** BreadCrumbs ****/
    
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+[Period]",
        "command": "-breadcrumbs.focus"
    },
    {
        "key": "ctrl+shift+i",
        "command": "breadcrumbs.focusAndSelect"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "-breadcrumbs.focusAndSelect"
    },

/* ---------------------------------------------------- */
    
/**** Compare editor (Meta+C) ****/

    {
        "key": "meta+c w",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "meta+c meta+w",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "meta+c q",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "meta+c meta+q",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },

/* ---------------------------------------------------- */

/****  Running non-default tasks  ****/

    {
        "key": "ctrl+shift+alt+b",
        "command": "-xmlTools.formatAsXml"
    },
    {
        "key": "ctrl+shift+alt+b",
        "command": "workbench.action.tasks.runTask"
    },

/* ---------------------------------------------------- */

/****  Code Formatting  ****/

    {
        "key": "Ctrl+tab",
        "command": "editor.action.formatSelection",
        "when": "editorHasSelection && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasSelection && editorTextFocus && !editorReadonly"
    },
    /*
    {
        "key": "tab",
        "command": "editor.action.format"
    },
    {
        "key": "tab",
        "command": "editor.action.reindentlines"
    },
    */

/* ---------------------------------------------------- */

/****  Sub-Word Navigation  ****/

    {   
        "key": "ctrl+alt+right",        
        "command": "cursorWordPartRight",
        "when": "textInputFocus"
    },
    {   
        "key": "ctrl+shift+alt+right",
        "command": "cursorWordPartRightSelect",
        "when": "textInputFocus"
    },
    {   
        "key": "ctrl+alt+left",
        "command": "cursorWordPartStartLeft",
        "when": "textInputFocus"
    },
    {   
        "key": "ctrl+shift+alt+left",
        "command": "cursorWordPartStartLeftSelect",
        "when": "textInputFocus"
    },
    {   
        "key": "ctrl+alt+backspace",
        "command": "deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {   
        "key": "ctrl+alt+delete",
        "command": "deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
    },

/* ---------------------------------------------------- */

/****  Line navigation  ****/

    {
        "key": "ctrl+l",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },

/* ---------------------------------------------------- */
    
/**** Code Completion and suggestions ****/

    //removed keybindings
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+space",
        "command": "-toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+shift+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    //added keybindings
    {
        "key": "meta+space",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "meta+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+meta+space",
        "command": "toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+meta+space",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },

/* ---------------------------------------------------- */
        
/**** Text Edition (XXX todo) ****/
    
    //removed keybindings
    {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+x",
        "command": "-editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    //added keybindings
    {
        "key": "ctrl+x s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+x ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+shift+x s",
        "command": "workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+shift+x ctrl+shift+s",
        "command": "workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+x c",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x ctrl+c",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[Comma] e",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+[Comma] ctrl+e",
        "command": "workbench.action.focusActiveEditorGroup"
    },

/* ---------------------------------------------------- */

/****  Ctrl+G similar to Esc  ****/
    {
        "key": "ctrl+g",
        "command": "workbench.action.terminal.clearSelection",
        "when": "terminalFocus && terminalTextSelected && !terminalFindWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.hideInterfaceOverview",
        "when": "interfaceOverviewVisible"
    },
    {
        "key": "ctrl+g",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
    },
    {
        "key": "ctrl+g",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
    },
    {
        "key": "ctrl+g",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "closeDirtyDiff",
        "when": "dirtyDiffVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeParameterHints",
        "when": "editorTextFocus && parameterHintsVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "closeReferenceSearchEditor",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeReviewPanel",
        "when": "reviewPanelVisible"
    },
    {
        "key": "ctrl+g",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "ctrl+g",
        "command": "leaveEditorMessage",
        "when": "messageVisible"
    },
    {
        "key": "ctrl+g",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
    },
    {
        "key": "ctrl+g",
        "command": "list.clear",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "notifications.hideList",
        "when": "notificationCenterVisible"
    },
    {
        "key": "ctrl+g",
        "command": "notifications.hideToasts",
        "when": "notificationToastsVisible"
    },
    {
        "key": "ctrl+g",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "search.action.cancel",
        "when": "listFocus && searchViewletVisible && !inputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "settings.action.clearSearchResults",
        "when": "inSettingsSearch"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+g ctrl+g",
        "command": "workbench.action.exitZenMode",
        "when": "inZenMode"
    },
    {
        "key": "ctrl+g",
        "command": "breadcrumbs.selectEditor",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus"
    },
    {
        "key": "ctrl+g",
        "command": "editor.action.webvieweditor.hideFind",
        "when": "webviewEditorFocus && webviewFindWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "macros.finishSearch",
        "when": "searchInputBoxFocus"
    },

/* ---------------------------------------------------- */

/**** Removed keybindings ****/

    {
        "key": "ctrl+[BracketRight]",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions"
    },
    {
        "key": "shift+alt+d",
        "command": "-extension.downloadSettings"
    },
    {
        "key": "shift+alt+u",
        "command": "-extension.updateSettings"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-editor.action.defineKeybinding",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-latex-workshop.build",
        "when": "editorTextFocus && !isMac"
    },
    {
        "key": "alt+meta+b",
        "command": "-latex-workshop.build",
        "when": "editorTextFocus && isMac"
    },
    {
        "key": "alt+meta+x",
        "command": "-workbench.view.extension.latex",
        "when": "isMac"
    },
    {
        "key": "ctrl+alt+x",
        "command": "-workbench.view.extension.latex"
    },
    {
        "key": "alt+meta+j",
        "command": "-latex-workshop.synctex",
        "when": "editorTextFocus && isMac"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-latex-workshop.synctex",
        "when": "editorTextFocus && !isMac"
    },
    {
        "key": "ctrl+alt+v",
        "command": "-latex-workshop.view",
        "when": "editorTextFocus && !isMac"
    },
    {
        "key": "alt+meta+v",
        "command": "-latex-workshop.view",
        "when": "editorTextFocus && isMac"
    },
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openFolder"
    },
    {
        "key": "ctrl+k f",
        "command": "-workbench.action.closeFolder"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+f9",
        "command": "-editor.debug.action.toggleInlineBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "delete",
        "command": "-debug.removeBreakpoint",
        "when": "breakpointsFocused && !breakpointSelected"
    },
    {
        "key": "space",
        "command": "-debug.toggleBreakpoint",
        "when": "breakpointsFocused && !inputFocus"
    },
    {
        "key": "f2",
        "command": "-debug.renameWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "f2",
        "command": "-debug.setVariable",
        "when": "variablesFocused"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView"
    },
    {
        "key": "shift+alt+0",
        "command": "-workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.openNextRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+5",
        "command": "-workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+6",
        "command": "-workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "ctrl+7",
        "command": "-workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "ctrl+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "alt+0",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "alt+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "alt+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "alt+3",
        "command": "-workbench.action.openEditorAtIndex3"
    },
    {
        "key": "alt+4",
        "command": "-workbench.action.openEditorAtIndex4"
    },
    {
        "key": "alt+5",
        "command": "-workbench.action.openEditorAtIndex5"
    },
    {
        "key": "alt+6",
        "command": "-workbench.action.openEditorAtIndex6"
    },
    {
        "key": "alt+7",
        "command": "-workbench.action.openEditorAtIndex7"
    },
    {
        "key": "alt+8",
        "command": "-workbench.action.openEditorAtIndex8"
    },
    {
        "key": "alt+9",
        "command": "-workbench.action.openEditorAtIndex9"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+meta+w",
        "command": "-workbench.action.toggleTabsVisibility"
    },
    {
        "key": "ctrl+k down",
        "command": "-workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k up",
        "command": "-workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "ctrl+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "shift+alt+1",
        "command": "-workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "shift+alt+9",
        "command": "-workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+k enter",
        "command": "-workbench.action.keepEditor"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "ctrl+k o",
        "command": "-workbench.action.files.showOpenedFileInNewWindow"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+f3",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "ctrl+f3",
        "command": "-editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+f3",
        "command": "-editor.action.previousSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "-editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "alt+enter",
        "command": "-editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "-editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[IntlBackslash]",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.extensioneditor.showfind",
        "when": "extensionEditorWebviewFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "webviewEditorFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-keybindings.editor.searchKeybindings",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchCaseSensitive",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchRegex",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "f4",
        "command": "-goToNextReference",
        "when": "referenceSearchVisible"
    },
    {
        "key": "f4",
        "command": "-goToNextReferenceFromEmbeddedEditor",
        "when": "inReferenceSearchEditor"
    },
    {
        "key": "shift+f4",
        "command": "-goToPreviousReference",
        "when": "referenceSearchVisible"
    },
    {
        "key": "shift+f4",
        "command": "-goToPreviousReferenceFromEmbeddedEditor",
        "when": "inReferenceSearchEditor"
    },
    {
        "key": "ctrl+shift+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible"
    },
    {
        "key": "ctrl+c",
        "command": "-search.action.copyMatch",
        "when": "fileMatchOrMatchFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "-search.action.copyPath",
        "when": "fileMatchOrFolderMatchFocus"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+up",
        "command": "-search.action.focusSearchFromResults",
        "when": "firstMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus"
    },
    {
        "key": "shift+end",
        "command": "-workbench.action.terminal.scrollToBottom",
        "when": "terminalFocus"
    },
    {
        "key": "shift+home",
        "command": "-workbench.action.terminal.scrollToTop",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-workbench.action.terminal.scrollDown",
        "when": "terminalFocus"
    },
    {
        "key": "shift+pagedown",
        "command": "-workbench.action.terminal.scrollDownPage",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-workbench.action.terminal.scrollUp",
        "when": "terminalFocus"
    },
    {
        "key": "shift+pageup",
        "command": "-workbench.action.terminal.scrollUpPage",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNextTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "shift+f3",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "shift+f3",
        "command": "-workbench.action.terminal.findPreviousTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegexTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWordTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
    },

/* ---------------------------------------------------- */

/**** Automatic additions (should be empty) ****/

    {},
]
